name: Build

on:
  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
env:
  AWS_REGION: "eu-west-1"
  ECR_REPOSITORY_DB: "efti/db"
  ECR_REPOSITORY_BACKEND: "efti/backend"

permissions:
  id-token: write
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-jdk
      - name: Install Clojure
        uses: ./.github/actions/install-clj
      - name: Cache Clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-

      - name: Start database
        run: ./start.sh
        working-directory: ./docker

      - name: Run tests
        working-directory: ./backend
        run: clojure -A:dev -A:test

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_DEPLOY_ROLE }}
          role-session-name: githubdeploymentsession
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@ebdeac79a5f9525e298b368a491c338b8fd60fe9

      - name: Build db migration tool image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./db
        run: |
          ./build-docker-image.sh $ECR_REGISTRY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_DB:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_DB:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build application image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./backend
        run: | 
          ./build-docker-image.sh $ECR_REGISTRY
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_DB:$IMAGE_TAG" >> $GITHUB_OUTPUT